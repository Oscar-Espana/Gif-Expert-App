{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA+BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAkBvC,OACE,0BAAMC,SAZa,SAACC,GAEpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,OAOhB,2BAAOO,YAAY,kBAAkBC,KAAK,OAAOC,MAAOV,EAAYW,SAjB9C,SAACR,GACzBF,EAAcE,EAAES,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE4BC,UAAUH,GAFtC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAaZM,GAbY,4CAAH,sDCcLO,EAZK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OAEE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCeKO,EAnBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAEpBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAEGqB,EDduBK,CAAa1B,GAA/Ba,EAFoB,EAEzBN,KAAaa,EAFY,EAEZA,QAEpB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAEjDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEazBkB,EAzBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,gBAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEQ6C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCdtC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6b646d3a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n        setCategories(cats =>[inputValue,...cats]);\r\n        setInputValue('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input placeholder='Find images gif' type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes={\r\n  setCategories:PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=12&api_key=TCQFCpq5FTQE0QxW0KCnD3xeqaZU2Spa`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  \r\n  return (\r\n\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  \r\n  const {data:images, loading}= useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {\r\n        loading && <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      \r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n\r\n    });\r\n  }, [category]);\r\n\r\n  return state; // {data:[], loading:true };\r\n};\r\n","import React,{useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            \r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category=>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}